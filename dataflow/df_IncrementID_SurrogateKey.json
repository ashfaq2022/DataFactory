{
	"name": "df_IncrementID_SurrogateKey",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_Mission100DataLake_productcsv",
						"type": "DatasetReference"
					},
					"name": "ProductOriginalFile"
				},
				{
					"dataset": {
						"referenceName": "ds_DataLake_Product2",
						"type": "DatasetReference"
					},
					"name": "ProductNewFile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Mission100DataLake_productcsv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "AddDummyColumn"
				},
				{
					"name": "GetMaxValue"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "CrossJoin"
				},
				{
					"name": "NewProductID"
				},
				{
					"name": "select1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as string,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as string,",
				"          ListPrice as string,",
				"          Size as string,",
				"          Weight as string,",
				"          ProductCategoryID as string,",
				"          ProductModelID as string,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          DiscontinuedDate as string,",
				"          ThumbNailPhoto as string,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> ProductOriginalFile",
				"source(output(",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as string,",
				"          ListPrice as string,",
				"          Size as string,",
				"          Weight as string,",
				"          ProductCategoryID as string,",
				"          ProductModelID as string,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          DiscontinuedDate as string,",
				"          ThumbNailPhoto as string,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ProductNewFile",
				"ProductOriginalFile derive(DummyColumn = 'Dummy') ~> AddDummyColumn",
				"AddDummyColumn aggregate(groupBy(DummyColumn),",
				"     MaxProductID = max(ProductID)) ~> GetMaxValue",
				"ProductNewFile keyGenerate(output(ProductID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"GetMaxValue, surrogateKey join(1 == 1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> CrossJoin",
				"CrossJoin derive(NewProductID = toString(toInteger(MaxProductID) + toInteger(ProductID))) ~> NewProductID",
				"NewProductID select(mapColumn(",
				"          ProductID = NewProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate,",
				"          ThumbNailPhoto,",
				"          ThumbnailPhotoFileName,",
				"          rowguid,",
				"          ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"ProductOriginalFile, select1 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as string,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as string,",
				"          ListPrice as string,",
				"          Size as string,",
				"          Weight as string,",
				"          ProductCategoryID as string,",
				"          ProductModelID as string,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          DiscontinuedDate as string,",
				"          ThumbNailPhoto as string,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     partitionFileNames:['product.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}