{
	"name": "df_split_ColumnData_ToRows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_mission100Datalake",
						"type": "LinkedServiceReference"
					},
					"name": "EmpSourceFile"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_mission100Datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SkillSplit"
				},
				{
					"name": "FlattenTrsnfSkill"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as short,",
				"          EmpName as string,",
				"          Skills as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'inputdata',",
				"     folderPath: 'PractiseStage',",
				"     fileName: 'ToSplitFile.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> EmpSourceFile",
				"EmpSourceFile derive(Skills = split(Skills, '|')) ~> SkillSplit",
				"SkillSplit foldDown(unroll(Skills),",
				"     mapColumn(",
				"          EmpID,",
				"          EmpName,",
				"          Skills",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenTrsnfSkill",
				"FlattenTrsnfSkill sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'inputdata',",
				"     folderPath: 'PractiseStage',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ToCollectFile.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}